name: Node.js CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'front-service/**'
      - '.github/workflows/front-service.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'front-service/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - run: npm ci
      working-directory: front-service
    - run: npm run build --if-present
      working-directory: front-service

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm ci
      working-directory: front-service
    - run: npm test
      working-directory: front-service

  # docker:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_TOKEN }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./front-service
  #         file: ./front-service/Dockerfile
  #         push: true
  #         platforms: linux/amd64,linux/arm64
  #         tags: |
  #           marmevladek/devopsl-frontend:latest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    #dctaф123фф1фыв..11
    steps:
      - name: Mark CI success
        if: success()
        run: |
          echo "CI_SUCCESS_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          
