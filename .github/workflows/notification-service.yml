name: Notification Service CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'notification-service/**'
      - '.github/workflows/notification-service.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'notification-service/**'

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    services:
      sonar:
        image: sonarqube:community
        ports: [ 9000:9000 ]
        options: >-
          -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
          --health-cmd="curl -f http://localhost:9000/api/system/status | grep -q -E 'UP|GREEN'"
          --health-interval=5s --health-timeout=5s --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - name: Wait for SonarQube
        run: |
          echo "Waiting for SonarQube..."
          until curl -s http://localhost:9000/api/system/status | grep -q -E 'UP|GREEN'; do
            sleep 3
          done

      - name: Generate CI token
        id: gen_token
        run: |
          TOKEN=$(curl -s -u admin:admin \
            -X POST "http://localhost:9000/api/user_tokens/generate" \
            -d "name=ci-token" | jq -r '.token')
          echo "::add-mask::$TOKEN"
          echo "SONAR_TOKEN=$TOKEN" >> "$GITHUB_ENV"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build & Sonar analyze
        working-directory: notification-service
        env:
          SONAR_HOST_URL: http://localhost:9000
        run: |
          mvn -B verify \
            org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar \
            -Dsonar.projectKey=devopsl \
            -Dsonar.host.url=$SONAR_HOST_URL

  test:
    runs-on: ubuntu-latest
    needs: build
    name: Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Format code
        working-directory: notification-service
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate format
        working-directory: notification-service
        run: mvn formatter:validate

      - name: Test notification-service
        run: mvn test
        working-directory: notification-service

  docker-image:
    runs-on: ubuntu-latest
    name: Docker Image
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push notification Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./notification-service
          file: ./notification-service/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            marmevladek/devopsl-notification:latest