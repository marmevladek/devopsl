name: Product Service CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend-service/**'
      - '.github/workflows/product-service.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'backend-service/**'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Analyze
    services:
      sonar:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - name: Wait for SonarQube to be ready
        run: |
          until curl -s http://localhost:9000; do
            echo "Waiting for SonarQube..."
            sleep 10
          done
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Run Sonar Scanner
        working-directory: backend-service
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar \
            -Dsonar.projectKey=devopsl \
            -Dsonar.projectName='devopsl' \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
  test:
    runs-on: ubuntu-latest
    name: Test
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Format code
        working-directory: backend-service
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate format
        working-directory: backend-service
        run: mvn formatter:validate

      - name: Test backend-service
        run: mvn test
        working-directory: backend-service

  docker-image:
    runs-on: ubuntu-latest
    needs: test
    name: Docker Image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend-service
          file: ./backend-service/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            marmevladek/devopsl-backend:latest