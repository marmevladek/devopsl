version: "3.9"

services:
  backend-service:
#    build:
#      context: backend-service
#      dockerfile: Dockerfile
    image: marmevladek/devopsl-backend:latest
    platform: linux/amd64
    ports:
      - "1000:1000"
    depends_on:
      - postgres
    networks:
      - monitoring

  front-service:
#    build:
#      context: front-service
#      dockerfile: Dockerfile
    image: marmevladek/devopsl-frontend:latest
    platform: linux/amd64
    ports:
      - "1001:1001"
    command: ["node", "app.js"]
    networks:
      - monitoring

  postgres:
    container_name: postgresql
    image: postgres:17.2
    volumes:
    - postgres:/var/lib/postgresql/data
#    - ./db-init/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: devopsl-db
    networks:
      - monitoring

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgres:5432/devopsl-db?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure-services/grafana/prometheus/config.yml:/etc/prometheus/config.yml:ro
    command:
      - "--config.file=/etc/prometheus/config.yml"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:10.4.3
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  postgres:
  grafana-data:

